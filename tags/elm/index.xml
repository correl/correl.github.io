<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Elm on Projects and Coding Adventures</title>
    <link>https://correl.phoenixinquis.net/tags/elm.html</link>
    <description>Recent content in Elm on Projects and Coding Adventures</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 23 Jan 2018 00:00:00 -0500</lastBuildDate>
    <atom:link href="https://correl.phoenixinquis.net/tags/elm/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Cleaner Recursive HTTP Requests with Elm Tasks</title>
      <link>https://correl.phoenixinquis.net/2018/01/23/cleaner-recursive-http-with-elm-tasks.html</link>
      <pubDate>Tue, 23 Jan 2018 00:00:00 -0500</pubDate>
      <guid>https://correl.phoenixinquis.net/2018/01/23/cleaner-recursive-http-with-elm-tasks.html</guid>
      <description>&lt;p&gt;&lt;em&gt;Continued from part one, &lt;a href=&#34;https://correl.phoenixinquis.net/2018/01/22/recursive-http-with-elm.html&#34;&gt;Recursive HTTP Requests with Elm&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;In &lt;a href=&#34;https://correl.phoenixinquis.net/2018/01/22/recursive-http-with-elm.html&#34;&gt;my last post&lt;/a&gt;, I described my first pass at building a library to&#xA;fetch data from a paginated JSON REST API. It worked, but it wasn&amp;rsquo;t&#xA;too clean. In particular, the handling of the multiple pages and&#xA;concatenation of results was left up to the calling code. Ideally,&#xA;both of these concerns should be handled by the library, letting the&#xA;application focus on working with a full result set. Using Elm&amp;rsquo;s&#xA;Tasks, we can achieve exactly that!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Recursive HTTP Requests with Elm</title>
      <link>https://correl.phoenixinquis.net/2018/01/22/recursive-http-with-elm.html</link>
      <pubDate>Mon, 22 Jan 2018 00:00:00 -0500</pubDate>
      <guid>https://correl.phoenixinquis.net/2018/01/22/recursive-http-with-elm.html</guid>
      <description>&lt;p&gt;So I got the idea in my head that I wanted to pull data from the&#xA;GitLab / GitHub APIs in my Elm app. This seemed straightforward&#xA;enough; just wire up an HTTP request and a JSON decoder, and off I go.&#xA;Then I remember, oh crap&amp;hellip; like any sensible API with a potentially&#xA;huge amount of data behind it, the results come back &lt;em&gt;paginated&lt;/em&gt;. For&#xA;anyone unfamiliar, this means that a single API request for a list of,&#xA;say, repositories, is only going to return up to some maximum number&#xA;of results. If there are more results available, there will be a&#xA;reference to additional &lt;em&gt;pages&lt;/em&gt; of results, that you can then fetch&#xA;with &lt;em&gt;another&lt;/em&gt; API request. My single request decoding only the&#xA;results returned &lt;em&gt;from&lt;/em&gt; that single request wasn&amp;rsquo;t going to cut it.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
